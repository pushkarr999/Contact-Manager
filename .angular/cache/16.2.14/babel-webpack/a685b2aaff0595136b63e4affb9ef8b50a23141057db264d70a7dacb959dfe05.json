{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:500/api/'; // Replace with your API endpoint\n  }\n\n  getData() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InVzZXJuYW1lIjoiUHVzaGthciBTdXRhciIsImVtYWlsIjoicHVzaGthckB5b3BtYWlsLmNvbSIsImlkIjoiNjY1NjBmYWFkZWJiYWI5ZjRiNTNiZmJhIn0sImlhdCI6MTcxNzAwMTk1MCwiZXhwIjoxNzE3MDA3OTUwfQ.rU_vtoHyHe_sJg-mWjcUhbUktxdRMY31lBJYC1eluHQ' // Replace with your token\n    });\n\n    return this.http.get(this.apiUrl + 'contacts', {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","apiUrl","getData","headers","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Contact Manager\\frontend\\frontend\\src\\app\\backend.service.ts"],"sourcesContent":["// src/app/api.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private apiUrl = 'http://localhost:500/api/';  // Replace with your API endpoint\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getData(): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7InVzZXJuYW1lIjoiUHVzaGthciBTdXRhciIsImVtYWlsIjoicHVzaGthckB5b3BtYWlsLmNvbSIsImlkIjoiNjY1NjBmYWFkZWJiYWI5ZjRiNTNiZmJhIn0sImlhdCI6MTcxNzAwMTk1MCwiZXhwIjoxNzE3MDA3OTUwfQ.rU_vtoHyHe_sJg-mWjcUhbUktxdRMY31lBJYC1eluHQ'  // Replace with your token\r\n    });\r\n\r\n    return this.http.get( this.apiUrl + 'contacts', { headers });\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B,CAAC,CAAE;EAEP;;EAExCC,OAAOA,CAAA;IACL,MAAMC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,4QAA4Q,CAAE;KAChS,CAAC;;IAEF,OAAO,IAAI,CAACG,IAAI,CAACI,GAAG,CAAE,IAAI,CAACH,MAAM,GAAG,UAAU,EAAE;MAAEE;IAAO,CAAE,CAAC;EAC9D;EAAC,QAAAE,CAAA,G;qBAbUP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVZ,UAAU;IAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}